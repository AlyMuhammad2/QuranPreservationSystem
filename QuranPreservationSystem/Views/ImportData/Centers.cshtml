@using QuranPreservationSystem.Domain.Entities
@{
    ViewData["Title"] = "استيراد المراكز";
    Layout = "_DashboardLayout";
    var tempRecords = ViewBag.TempRecords as IEnumerable<QuranPreservationSystem.Domain.Entities.TempCenterImport>;
}

<!-- Page Header -->
<div class="page-header">
    <div class="page-title">
        <i class="fas fa-mosque"></i>
        <h2>استيراد بيانات المراكز</h2>
    </div>
    <div class="page-actions">
        <a href="@Url.Action("DownloadCentersTemplate")" class="btn btn-success">
            <i class="fas fa-download"></i> تحميل القالب
        </a>
        <a href="@Url.Action("Index")" class="btn btn-outline">
            <i class="fas fa-arrow-right"></i> العودة
        </a>
    </div>
</div>

<!-- Messages -->
@if (TempData["Success"] != null)
{
    <div class="alert alert-success">
        <i class="fas fa-check-circle"></i> @TempData["Success"]
    </div>
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">
        <i class="fas fa-exclamation-circle"></i> @TempData["Error"]
    </div>
}
@if (TempData["Warning"] != null)
{
    <div class="alert alert-warning">
        <i class="fas fa-exclamation-triangle"></i> @TempData["Warning"]
    </div>
}

<!-- Upload Section -->
<div class="card">
    <div class="card-header">
        <i class="fas fa-upload"></i>
        <span>رفع ملف Excel</span>
    </div>
    <div class="card-body">
        <form asp-action="UploadCenters" method="post" enctype="multipart/form-data">
            <div class="upload-area">
                <div class="upload-icon">
                    <i class="fas fa-file-excel"></i>
                </div>
                <h4>اختر ملف Excel للرفع</h4>
                <p>قم بتحميل القالب أولاً، املأه، ثم ارفعه هنا</p>
                
                <input type="file" 
                       name="excelFile" 
                       id="excelFile" 
                       accept=".xlsx,.xls" 
                       class="file-input" 
                       required />
                
                <label for="excelFile" class="file-label">
                    <i class="fas fa-cloud-upload-alt"></i>
                    <span class="file-text">اختر ملف Excel</span>
                </label>

                <div class="upload-actions">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-upload"></i> رفع ومعالجة
                    </button>
                    <a href="@Url.Action("DownloadCentersTemplate")" class="btn btn-success">
                        <i class="fas fa-download"></i> تحميل القالب
                    </a>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Recent Imports -->
@if (tempRecords != null && tempRecords.Any())
{
    <div class="card" style="margin-top: 20px;">
        <div class="card-header">
            <i class="fas fa-history"></i>
            <span>آخر عمليات الاستيراد</span>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="data-table">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>اسم المركز</th>
                            <th>الحالة</th>
                            <th>تاريخ الرفع</th>
                            <th>رفع بواسطة</th>
                            <th>رسالة الخطأ</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int index = 1;
                        }
                        @foreach (var record in tempRecords)
                        {
                            <tr>
                                <td>@index</td>
                                <td><strong>@record.Name</strong></td>
                                <td>
                                    @switch (record.Status)
                                    {
                                        case ImportStatus.Pending:
                                            <span class="badge badge-warning">في الانتظار</span>
                                            break;
                                        case ImportStatus.Processing:
                                            <span class="badge badge-info">قيد المعالجة</span>
                                            break;
                                        case ImportStatus.Completed:
                                            <span class="badge badge-success">تم بنجاح</span>
                                            break;
                                        case ImportStatus.Failed:
                                            <span class="badge badge-danger">فشل</span>
                                            break;
                                        case ImportStatus.Duplicate:
                                            <span class="badge badge-secondary">مكرر</span>
                                            break;
                                    }
                                </td>
                                <td>@record.UploadedDate.ToString("dd/MM/yyyy HH:mm")</td>
                                <td>@(record.UploadedBy ?? "-")</td>
                                <td>
                                    @if (!string.IsNullOrEmpty(record.ErrorMessage))
                                    {
                                        <span class="text-danger">@record.ErrorMessage</span>
                                    }
                                    else
                                    {
                                        <text>-</text>
                                    }
                                </td>
                            </tr>
                            index++;
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}

@section Styles {
    <link rel="stylesheet" href="~/css/dashboard.css" />
    <style>
        .import-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .import-card {
            background: white;
            border-radius: 12px;
            padding: 30px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.06);
            text-align: center;
            transition: all 0.3s ease;
            border: 2px solid transparent;
            position: relative;
        }

        .import-card:not(.disabled):hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.12);
            border-color: var(--primary-light);
        }

        .import-card.disabled {
            opacity: 0.6;
        }

        .import-icon {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 20px;
            font-size: 2.5rem;
        }

        .import-card h3 {
            color: var(--primary-dark);
            margin-bottom: 10px;
            font-size: 1.3rem;
            font-weight: 700;
        }

        .import-card p {
            color: #666;
            margin-bottom: 20px;
            line-height: 1.6;
        }

        .import-steps {
            display: flex;
            justify-content: space-around;
            margin: 20px 0;
            padding: 15px;
            background: #f5f5f5;
            border-radius: 8px;
        }

        .step {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 8px;
            font-size: 0.85rem;
            color: var(--primary-dark);
            font-weight: 600;
        }

        .step i {
            font-size: 1.5rem;
            color: var(--primary-color);
        }

        .coming-soon-badge {
            position: absolute;
            top: 15px;
            left: 15px;
            background: #ff9800;
            color: white;
            padding: 5px 12px;
            border-radius: 15px;
            font-size: 0.8rem;
            font-weight: 600;
        }

        .upload-area {
            text-align: center;
            padding: 40px;
            background: #f9f9f9;
            border-radius: 12px;
            border: 2px dashed var(--border-color);
        }

        .upload-icon {
            font-size: 4rem;
            color: var(--primary-color);
            margin-bottom: 20px;
        }

        .upload-area h4 {
            color: var(--primary-dark);
            margin-bottom: 10px;
        }

        .upload-area p {
            color: #666;
            margin-bottom: 30px;
        }

        .file-input {
            display: none;
        }

        .file-label {
            display: inline-flex;
            align-items: center;
            gap: 10px;
            padding: 15px 30px;
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
            color: white;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 600;
            margin-bottom: 20px;
        }

        .file-label:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(76, 175, 80, 0.3);
        }

        .file-label i {
            font-size: 1.3rem;
        }

        .upload-actions {
            display: flex;
            gap: 15px;
            justify-content: center;
        }

        .btn-block {
            width: 100%;
        }

        .instructions {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
        }

        .instruction-item {
            display: flex;
            gap: 15px;
            align-items: flex-start;
        }

        .instruction-number {
            width: 40px;
            height: 40px;
            background: var(--primary-color);
            color: white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
            font-weight: bold;
            flex-shrink: 0;
        }

        .instruction-content h4 {
            color: var(--primary-dark);
            margin-bottom: 5px;
            font-size: 1rem;
        }

        .instruction-content p {
            color: #666;
            margin: 0;
            line-height: 1.5;
            font-size: 0.9rem;
        }

        .alert {
            padding: 15px 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .alert-success {
            background: #e8f5e9;
            color: #2e7d32;
            border-right: 4px solid #43a047;
        }

        .alert-danger {
            background: #ffebee;
            color: #c62828;
            border-right: 4px solid #e53935;
        }

        .alert-warning {
            background: #fff3e0;
            color: #e65100;
            border-right: 4px solid #ff9800;
        }

        @@media (max-width: 768px) {
            .import-grid {
                grid-template-columns: 1fr;
            }

            .instructions {
                grid-template-columns: 1fr;
            }

            .upload-actions {
                flex-direction: column;
            }
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            $('#excelFile').on('change', function() {
                var fileName = $(this).val().split('\\').pop();
                if (fileName) {
                    $('.file-text').text(fileName);
                } else {
                    $('.file-text').text('اختر ملف Excel');
                }
            });
        });
    </script>
}


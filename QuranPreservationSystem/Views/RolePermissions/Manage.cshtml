@model QuranPreservationSystem.Application.DTOs.ManageRolePermissionsDto
@{
    ViewData["Title"] = "إدارة صلاحيات " + (Model.RoleName == "Admin" ? "مدير النظام" : "المدرس");
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<!-- Page Header -->
<div class="page-header">
    <div class="page-title">
        <i class="fas fa-shield-alt"></i>
        <h2>إدارة صلاحيات @(Model.RoleName == "Admin" ? "مدير النظام" : "المدرس")</h2>
    </div>
    <div class="page-actions">
        <a href="@Url.Action("Index", "RolePermissions")" class="btn btn-outline">
            <i class="fas fa-arrow-right"></i> رجوع
        </a>
    </div>
</div>

<!-- Form Card -->
<div class="card">
    <div class="card-header">
        <i class="fas fa-edit"></i> تحديد الصلاحيات
    </div>
    <div class="card-body">
        <form asp-action="Manage" method="post" class="modern-form">
            <input type="hidden" asp-for="RoleId" />
            <input type="hidden" asp-for="RoleName" />
            <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

            <div class="form-section">
                <h3 class="section-title">
                    <i class="fas fa-list"></i> الصلاحيات المتاحة
                </h3>
                
                <div class="permissions-grid">
                    @for (int i = 0; i < Model.Permissions.Count; i++)
                    {
                        <input type="hidden" asp-for="@Model.Permissions[i].PermissionId" />
                        <input type="hidden" asp-for="@Model.Permissions[i].PermissionName" />
                        <input type="hidden" asp-for="@Model.Permissions[i].DisplayName" />
                        <input type="hidden" asp-for="@Model.Permissions[i].Icon" />

                        <div class="permission-card @(Model.Permissions[i].IsAssigned ? "active" : "")">
                            <div class="permission-header">
                                <div class="permission-title">
                                    <i class="fas @Model.Permissions[i].Icon"></i>
                                    <span>@Model.Permissions[i].DisplayName</span>
                                </div>
                                <label class="switch">
                                    <input type="checkbox" 
                                           asp-for="@Model.Permissions[i].IsAssigned" 
                                           onchange="togglePermission(this, @i)"/>
                                    <span class="slider"></span>
                                </label>
                            </div>

                            <div class="permission-actions" id="actions-@i" style="display: @(Model.Permissions[i].IsAssigned ? "block" : "none")">
                                <label class="checkbox-label">
                                    <input type="checkbox" asp-for="@Model.Permissions[i].CanView" checked />
                                    <span><i class="fas fa-eye"></i> عرض</span>
                                </label>
                                <label class="checkbox-label">
                                    <input type="checkbox" asp-for="@Model.Permissions[i].CanCreate" />
                                    <span><i class="fas fa-plus"></i> إنشاء</span>
                                </label>
                                <label class="checkbox-label">
                                    <input type="checkbox" asp-for="@Model.Permissions[i].CanEdit" />
                                    <span><i class="fas fa-edit"></i> تعديل</span>
                                </label>
                                <label class="checkbox-label">
                                    <input type="checkbox" asp-for="@Model.Permissions[i].CanDelete" />
                                    <span><i class="fas fa-trash"></i> حذف</span>
                                </label>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- Form Actions -->
            <div class="form-actions">
                <button type="submit" class="btn btn-success">
                    <i class="fas fa-save"></i> حفظ الصلاحيات
                </button>
                <a href="@Url.Action("Index", "RolePermissions")" class="btn btn-outline">
                    <i class="fas fa-times"></i> إلغاء
                </a>
            </div>
        </form>
    </div>
</div>

@section Styles {
    <style>
        .permissions-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .permission-card {
            background: white;
            border: 2px solid #e0e0e0;
            border-radius: 12px;
            padding: 20px;
            transition: all 0.3s ease;
        }

        .permission-card:hover {
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .permission-card.active {
            border-color: var(--primary-color);
            background: #f8fdf9;
        }

        .permission-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            padding-bottom: 15px;
            border-bottom: 1px solid #e0e0e0;
        }

        .permission-title {
            display: flex;
            align-items: center;
            gap: 10px;
            font-weight: 600;
            font-size: 1.05rem;
            color: var(--primary-dark);
        }

        .permission-title i {
            color: var(--primary-color);
            font-size: 1.3rem;
        }

        .permission-actions {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 12px;
        }

        .permission-actions .checkbox-label {
            display: flex;
            align-items: center;
            gap: 8px;
            padding: 10px;
            background: #f5f5f5;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.2s ease;
            margin: 0;
        }

        .permission-actions .checkbox-label:hover {
            background: #e8f5e9;
        }

        .permission-actions .checkbox-label input[type="checkbox"] {
            width: 18px;
            height: 18px;
            margin: 0;
        }

        .permission-actions .checkbox-label span {
            font-size: 0.9rem;
            color: #555;
        }

        .permission-actions .checkbox-label i {
            color: var(--primary-color);
        }

        /* Toggle Switch */
        .switch {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 30px;
        }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            transition: .4s;
            border-radius: 30px;
        }

        .slider:before {
            position: absolute;
            content: "";
            height: 22px;
            width: 22px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            transition: .4s;
            border-radius: 50%;
        }

        input:checked + .slider {
            background-color: var(--primary-color);
        }

        input:checked + .slider:before {
            transform: translateX(30px);
        }
    </style>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function togglePermission(checkbox, index) {
            const actionsDiv = document.getElementById('actions-' + index);
            const permissionCard = checkbox.closest('.permission-card');
            
            if (checkbox.checked) {
                actionsDiv.style.display = 'block';
                permissionCard.classList.add('active');
                // تفعيل "عرض" تلقائياً عند تفعيل الصلاحية
                const viewCheckbox = actionsDiv.querySelector('input[type="checkbox"]');
                if (viewCheckbox) {
                    viewCheckbox.checked = true;
                }
            } else {
                actionsDiv.style.display = 'none';
                permissionCard.classList.remove('active');
                // إلغاء تحديد جميع الصلاحيات الفرعية
                const checkboxes = actionsDiv.querySelectorAll('input[type="checkbox"]');
                checkboxes.forEach(cb => cb.checked = false);
            }
        }

        // تهيئة الصفحة عند التحميل
        document.addEventListener('DOMContentLoaded', function() {
            const permissionCards = document.querySelectorAll('.permission-card');
            permissionCards.forEach((card, index) => {
                const checkbox = card.querySelector('.switch input');
                const actionsDiv = document.getElementById('actions-' + index);
                
                if (checkbox.checked) {
                    actionsDiv.style.display = 'block';
                    card.classList.add('active');
                }
            });
        });
    </script>
}


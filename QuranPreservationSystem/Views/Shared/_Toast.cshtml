<!-- Toast Notification Container -->
<div class="toast-container" id="toastContainer">
    @if (TempData["Success"] != null)
    {
        <div class="toast toast-success show" role="alert">
            <div class="toast-icon">
                <i class="fas fa-check-circle"></i>
            </div>
            <div class="toast-content">
                <div class="toast-title">نجاح العملية</div>
                <div class="toast-message">@TempData["Success"]</div>
            </div>
            <button type="button" class="toast-close" onclick="closeToast(this)">
                <i class="fas fa-times"></i>
            </button>
            <div class="toast-progress"></div>
        </div>
    }
    
    @if (TempData["Error"] != null)
    {
        <div class="toast toast-error show" role="alert">
            <div class="toast-icon">
                <i class="fas fa-exclamation-circle"></i>
            </div>
            <div class="toast-content">
                <div class="toast-title">فشل العملية</div>
                <div class="toast-message">@TempData["Error"]</div>
            </div>
            <button type="button" class="toast-close" onclick="closeToast(this)">
                <i class="fas fa-times"></i>
            </button>
            <div class="toast-progress"></div>
        </div>
    }
    
    @if (TempData["Warning"] != null)
    {
        <div class="toast toast-warning show" role="alert">
            <div class="toast-icon">
                <i class="fas fa-exclamation-triangle"></i>
            </div>
            <div class="toast-content">
                <div class="toast-title">تحذير</div>
                <div class="toast-message">@TempData["Warning"]</div>
            </div>
            <button type="button" class="toast-close" onclick="closeToast(this)">
                <i class="fas fa-times"></i>
            </button>
            <div class="toast-progress"></div>
        </div>
    }
    
    @if (TempData["Info"] != null)
    {
        <div class="toast toast-info show" role="alert">
            <div class="toast-icon">
                <i class="fas fa-info-circle"></i>
            </div>
            <div class="toast-content">
                <div class="toast-title">معلومة</div>
                <div class="toast-message">@TempData["Info"]</div>
            </div>
            <button type="button" class="toast-close" onclick="closeToast(this)">
                <i class="fas fa-times"></i>
            </button>
            <div class="toast-progress"></div>
        </div>
    }
</div>

<style>
    /* Toast Container */
    .toast-container {
        position: fixed;
        top: 90px;
        left: 30px;
        z-index: 9999;
        display: flex;
        flex-direction: column;
        gap: 15px;
        max-width: 400px;
    }

    /* Toast Base Styles */
    .toast {
        background: white;
        border-radius: 12px;
        padding: 18px 20px;
        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
        display: flex;
        align-items: center;
        gap: 15px;
        min-width: 350px;
        position: relative;
        overflow: hidden;
        opacity: 0;
        transform: translateX(-400px);
        transition: all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    }

    .toast.show {
        opacity: 1;
        transform: translateX(0);
        animation: slideIn 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    }

    @@keyframes slideIn {
        from {
            opacity: 0;
            transform: translateX(-400px);
        }
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }

    .toast.hide {
        opacity: 0;
        transform: translateX(-400px);
    }

    /* Toast Success */
    .toast-success {
        border-left: 5px solid #4caf50;
        background: linear-gradient(135deg, #ffffff 0%, #f1f8f4 100%);
    }

    .toast-success .toast-icon {
        background: linear-gradient(135deg, #4caf50, #2e7d32);
    }

    .toast-success .toast-progress {
        background: linear-gradient(90deg, #4caf50, #2e7d32);
    }

    /* Toast Error */
    .toast-error {
        border-left: 5px solid #f44336;
        background: linear-gradient(135deg, #ffffff 0%, #ffebee 100%);
    }

    .toast-error .toast-icon {
        background: linear-gradient(135deg, #f44336, #c62828);
    }

    .toast-error .toast-progress {
        background: linear-gradient(90deg, #f44336, #c62828);
    }

    /* Toast Warning */
    .toast-warning {
        border-left: 5px solid #ff9800;
        background: linear-gradient(135deg, #ffffff 0%, #fff3e0 100%);
    }

    .toast-warning .toast-icon {
        background: linear-gradient(135deg, #ff9800, #f57c00);
    }

    .toast-warning .toast-progress {
        background: linear-gradient(90deg, #ff9800, #f57c00);
    }

    /* Toast Info */
    .toast-info {
        border-left: 5px solid #2196f3;
        background: linear-gradient(135deg, #ffffff 0%, #e3f2fd 100%);
    }

    .toast-info .toast-icon {
        background: linear-gradient(135deg, #2196f3, #1976d2);
    }

    .toast-info .toast-progress {
        background: linear-gradient(90deg, #2196f3, #1976d2);
    }

    /* Toast Icon */
    .toast-icon {
        width: 45px;
        height: 45px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-shrink: 0;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }

    .toast-icon i {
        font-size: 1.3rem;
        color: white;
    }

    /* Toast Content */
    .toast-content {
        flex: 1;
    }

    .toast-title {
        font-size: 1rem;
        font-weight: 700;
        color: #2c3e50;
        margin-bottom: 4px;
    }

    .toast-message {
        font-size: 0.9rem;
        color: #5a6c7d;
        line-height: 1.4;
    }

    /* Toast Close Button */
    .toast-close {
        background: transparent;
        border: none;
        color: #95a5a6;
        cursor: pointer;
        padding: 8px;
        border-radius: 50%;
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
        flex-shrink: 0;
    }

    .toast-close:hover {
        background: rgba(0, 0, 0, 0.05);
        color: #5a6c7d;
        transform: rotate(90deg);
    }

    .toast-close i {
        font-size: 0.9rem;
    }

    /* Toast Progress Bar */
    .toast-progress {
        position: absolute;
        bottom: 0;
        left: 0;
        height: 4px;
        width: 100%;
        animation: shrink 5s linear forwards;
    }

    @@keyframes shrink {
        from {
            width: 100%;
        }
        to {
            width: 0%;
        }
    }

    /* Mobile Responsive */
    @@media (max-width: 768px) {
        .toast-container {
            top: 80px;
            left: 15px;
            right: 15px;
            max-width: none;
        }

        .toast {
            min-width: auto;
            width: 100%;
            padding: 15px 18px;
        }

        .toast-icon {
            width: 40px;
            height: 40px;
        }

        .toast-icon i {
            font-size: 1.1rem;
        }

        .toast-title {
            font-size: 0.95rem;
        }

        .toast-message {
            font-size: 0.85rem;
        }
    }
</style>

<script>
    // Auto-dismiss toasts after 5 seconds
    document.addEventListener('DOMContentLoaded', function() {
        const toasts = document.querySelectorAll('.toast.show');
        
        toasts.forEach(function(toast) {
            setTimeout(function() {
                closeToast(toast.querySelector('.toast-close'));
            }, 5000);
        });
    });

    function closeToast(button) {
        const toast = button.closest('.toast');
        toast.classList.add('hide');
        toast.classList.remove('show');
        
        setTimeout(function() {
            toast.remove();
        }, 400);
    }

    // Function to show toast programmatically (for AJAX calls)
    function showToast(message, type = 'success') {
        const container = document.getElementById('toastContainer');
        if (!container) return;

        const titles = {
            'success': 'نجاح العملية',
            'error': 'فشل العملية',
            'warning': 'تحذير',
            'info': 'معلومة'
        };

        const icons = {
            'success': 'fa-check-circle',
            'error': 'fa-exclamation-circle',
            'warning': 'fa-exclamation-triangle',
            'info': 'fa-info-circle'
        };

        const toast = document.createElement('div');
        toast.className = `toast toast-${type}`;
        toast.setAttribute('role', 'alert');
        
        toast.innerHTML = `
            <div class="toast-icon">
                <i class="fas ${icons[type]}"></i>
            </div>
            <div class="toast-content">
                <div class="toast-title">${titles[type]}</div>
                <div class="toast-message">${message}</div>
            </div>
            <button type="button" class="toast-close" onclick="closeToast(this)">
                <i class="fas fa-times"></i>
            </button>
            <div class="toast-progress"></div>
        `;

        container.appendChild(toast);
        
        // Trigger animation
        setTimeout(() => toast.classList.add('show'), 10);
        
        // Auto-dismiss after 5 seconds
        setTimeout(() => closeToast(toast.querySelector('.toast-close')), 5000);
    }
</script>

